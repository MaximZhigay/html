Основные команды Git
 
Настройки Git после установки
git config --global user.name "Имя"  
git config --global user.email e-mail  


git clone <url> - получение копии существующего Git-репозитория

git status - информация о состояния проекта

git add <имя файла> - индексация изменений, проиндексированные фалы попадут в коммит
git-rm <имя файла> - удаляет файлы из индекса

git commit -m 'описание коммита' - коммит (фиксация) изменений

git push [origin <имя ветки>] - отправить изменения в удаленный репозиторий

git pull [origin <ветка>] - получить изменения из удаленного репозитория

git fetch - получить изменения из удаленного репозитория (без слияния)

Ветвление:
git branch - отображает список веток

git branch <имя ветки> - создание ветки

git checkout <имя_ветки> - переключение на ветку

git push origin <имя ветки> - отправить ветку с изменениями в удаленный репозиторий

git merge <имя другой ветки> - слияние веток

git branch -d <имя ветки> - удаление ветки из локального репозитория

git push origin --delete <имя ветки> - удаление ветки из удаленного репозитория

Метки:
git tag - отображает список меток

git tag <имя метки> - создание легковесной метки (добавляется к следующему коммиту)

git tag -a <имя_метки> -m <сообщение> -  создание аннотированной метки (добавляется к следующему коммиту)

git tag -а <имя_метки> <хэш сумма коммита> - создание метки для конкретного коммита

git show <имя метки> - просмотр метки

git push origin <имя метки> - отправить метку в удаленный репозиторий
git push origin --tags - отправить все метки в удаленный репозиторий

Отмена изменений:
git log - просмотр истории

git stash - скрытие изменений, возвращение в состояние последнего коммита
git stash apply - возвращает скрытые изменения

git checkout <хэш сумма коммита> - можно вернуться к конкретному коммиту (только для просмотра)
git checkout master - вернуться в прежнее состояние

git checkout -b <имя новой ветки> <хэш сумма коммита> - переключаемся на желаемый коммит и начинаем работать с него, в новой созданной ветки

git reset --hard HEAD - отменить проиндексированные изменения

git reset --hard <хэш сумма коммита> - перейти к желаемому коммиту, отменив все последующие (работает в случае,если не был сделан push этого коммита)

git revert <хэш сумма коммита> - отменить опубликованные коммиты


Файл .gitignore служит для указания в нём файлов и папок, которые необходимо скрыть от системы контроля версий git


